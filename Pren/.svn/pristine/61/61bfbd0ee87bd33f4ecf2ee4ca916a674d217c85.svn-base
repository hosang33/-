<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="reviews">
	<insert id="insertReview" parameterClass="Review">
		insert into REVIEW_TABLES
		(REVIEW_NO, ORDER_NO, RIVIEW_CONTENTS, RIVIEW_STAR, RIVIEW_CREATE_DATE, REVIEW_IMG_NAME, ITEM_NO, USER_NO)
		values
		(REVIEW_TABLE_SEQ.nextval, #orderNo#, #content#, #star#, SYSDATE, #reviewImg#, #itemNo#, #userNo#)
	</insert>
	
	<!-- 상품번호로 리뷰 조회하기 -->
	<select id="getReviewByItemNo" parameterClass="int" resultClass="Review">
		select
			REVIEW_NO				as no,
			ORDER_NO				as orderNo,
			RIVIEW_CONTENTS			as content,
			RIVIEW_STAR				as star,
			RIVIEW_CREATE_DATE		as createdate,
			REVIEW_IMG_NAME			as reviewImg,
			ITEM_NO					as itemNo,
			USER_NO					as userNo
		from
			review_tables
		where
			item_no = #value#			
	</select>
	
	<!-- 리뷰 개수 상품번호로 조회하기 -->
	<select id="getReviewCountByItemNo" parameterClass="int" resultClass="int">
		select
			count(item_no) as cnt
		from
			review_tables
		where
			item_no = #productNo#
	</select>
	
	<!-- 리뷰 별점의 총합 조회하기 -->
	<select id="getTotalStarScoreAvg" parameterClass="int" resultClass="double">
		select
			nvl(avg(RIVIEW_STAR), 0) as avgScore
		from
			review_tables
		where
			item_no = #productNo#
	</select>
	
	<!-- 리뷰 페이징 -->
	<select id="getReviewsIsPaging" parameterClass="map" resultClass="Review">
		SELECT
			REVIEW_NO								as no,
			ORDER_NO								as orderNo,
			RIVIEW_CONTENTS							as content,
			nvl(RIVIEW_STAR, 0)						as star,
			RIVIEW_CREATE_DATE						as createdate,
			REVIEW_IMG_NAME							as reviewImg,
			ITEM_NO									as itemNo,
			USER_NO									as userNo
		FROM (select
					ROW_NUMBER() OVER (ORDER BY REVIEW_NO desc) rn,
					REVIEW_NO,
					ORDER_NO,			
					RIVIEW_CONTENTS,			
					RIVIEW_STAR,		
					RIVIEW_CREATE_DATE,		
					REVIEW_IMG_NAME,	
					ITEM_NO,		
					USER_NO					
				from
					review_tables)
		WHERE 
			rn >=#begin# 
		and 
			rn &lt;= #end#
		and
			item_no = #productNo#
	</select>
	
	<!-- 리뷰 번호로 리뷰 조회하기 -->
	<select id="getReviewByNo" parameterClass="int" resultClass="Review">
		select
			REVIEW_NO				as no,
			ORDER_NO				as orderNo,
			RIVIEW_CONTENTS			as content,
			RIVIEW_STAR				as star,
			RIVIEW_CREATE_DATE		as createdate,
			REVIEW_IMG_NAME			as reviewImg,
			ITEM_NO					as itemNo,
			USER_NO					as userNo
		from
			review_tables
		where
			review_no = #value#		
	</select>
	
	<!-- 리뷰 유저번호별 삭제하기 -->
	<delete id="deleteReview" parameterClass="int">
		delete from
			review_tables
		where
			review_no = #no#
	</delete>
	
	<!-- 리뷰 전체 삭제하기 -->
	<delete id="deleteAllReview" parameterClass="int">
		delete from
			review_tables
		where
			item_no = #productNo#
	</delete>
	
	
	<!-- 리뷰 수정하기 -->
	<update id="updateReview" parameterClass="Review">
		update
			review_tables
		set
			RIVIEW_CONTENTS= #content#,
			REVIEW_IMG_NAME= #reviewImg#
		where
			review_no = #no#
			
	</update>
</sqlMap>


